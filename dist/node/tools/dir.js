const fs=require("fs"),path=require("path"),type=require("./GetType");function _mkDir(e,r){try{fs.existsSync(r)||fs.mkdirSync(r)}catch(i){}e.length&&_mkDir(e,`${r}/${e.shift()}`)}function mkDir(e){if(!type.isString(e))return;const r=e.split(/[\\/]+/);_mkDir(r,r.shift())}function isFile(e){return fs.statSync(e).isFile()}function _readDir(e,r,i){const t=fs.readdirSync(e);t.forEach((t=>{const c=path.join(e,t);isFile(c)?r.test(t)&&i.push({path:e+"/"+t,name:t.replace(r,"")}):_readDir(e+"/"+t,r,i)}))}function readDir(e,r){const i=[];return _readDir(e,r,i),i}function copyFile(e,r){isFile(e)?fs.copyFileSync(e,r):(mkDir(r),fs.readdirSync(e).forEach((i=>{copyFile(path.join(e,i),path.join(r,i))})))}function camel(e="",r){return e=e.replace(/_/g,"-"),r||(e=e.toLowerCase()),{large:e.replace(/-[a-zA-z]/g,(e=>e[1].toUpperCase())).replace(/./,(e=>e.toUpperCase())),small:e.replace(/-[a-zA-z]/g,(e=>e[1].toUpperCase())).replace(/./,(e=>e.toLowerCase())),self:e,_large:e.replace(/-[a-zA-z]/g,(e=>`_${e[1].toUpperCase()}`)).replace(/./,(e=>e.toUpperCase())),_self:e.replace(/-/g,"_")}}function removeFolder(e){mkDir(e);const r=fs.readdirSync(e);r.forEach((r=>{const i=path.join(e,r);fs.statSync(i).isDirectory()?removeFolder(i):fs.unlinkSync(i)}));try{fs.rmdirSync(e)}catch(i){console.log(i)}}module.exports={mk:mkDir,readFileInType:readDir,copy:copyFile,camel:camel,remove:removeFolder,isFile:isFile};